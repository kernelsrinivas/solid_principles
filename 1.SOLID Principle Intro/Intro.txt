The SOLID concepts are

The Single-responsibility principle: 
"There should never be more than one reason for a class to change.
"In other words, every class should have only one responsibility.

The Openâ€“closed principle: 
"Software entities ... should be open for extension, but closed for modification."

The Liskov substitution principle: 
"Functions that use pointers or references to base classes must be able to use objects of derived classes without knowing it."

The Interface segregation principle: 
"Many client-specific interfaces are better than one general-purpose interface."

The Dependency inversion principle: 
"Depend upon abstractions, [not] concretions."

We are used SOLID Principles in Messaging Services with Problem and Solutions.
Its just template to understand how to write and manage SOLID Principles.
